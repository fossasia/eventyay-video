name: autodeployment

on:
  push:
    branches: [ "development" ]

jobs:
  # # Job 1: build
  # push_to_registry:
  #   name: Push Docker image to Docker hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v4

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         push: true
  #         tags: nthienphu/eventyay-video:development
  #         labels: manual

  # Job 2: Deploy
  # deploy:
  #   # needs: push_to_registry
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Add SSH key
  #       uses: webfactory/ssh-agent@v0.5.3
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     - name: Test SSH Connection
  #       run: ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'echo "Connected to server"'

  #     - name: Deploy to server
  #     # Use action "appleboy/ssh-action" to deploy image to server by SSH
  #       uses: appleboy/ssh-action@v0.1.3
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           # Test login status
  #           pwd && ll

  #           # Pull image pushed to DockerHub
  #           echo "Here?"
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/eventyay-video:development

  #           # Run new container, image pulled above
  #           echo "Here1 ?"
  #           docker run -d --name eventyay-video ${{ secrets.DOCKER_USERNAME }}/eventyay-video:development
  #           echo "Here2 ?"

  deploy_to_server:
    # needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker-compose down
            docker-compose pull
            docker-compose up -d
